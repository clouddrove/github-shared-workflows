name: Smurf Reusable Workflow
on:
  workflow_call:
    inputs:
      tools:
        description: 'Tool to run (helm or terraform)'
        type: string
        required: true
      branch:
        description: 'Branch to checkout'
        type: string
        default: 'selm'
      aws-role:
        description: 'AWS IAM role ARN to assume'
        type: string
        required: true
      aws-region:
        description: 'AWS region'
        type: string
        default: 'us-east-1'
      eks-cluster:
        description: 'EKS cluster name'
        type: string
        required: false
      ecr-repository:
        description: 'ECR repository URL'
        type: string
        required: false
      dockerfile-path:
        description: 'Path to Dockerfile'
        type: string
        required: false
      helm-values-path:
        description: 'Path to Helm values file'
        type: string
        required: false
      helm-chart-path:
        description: 'Path to Helm chart'
        type: string
        required: false
      namespace:
        description: 'Kubernetes namespace'
        type: string
        default: 'testing-smurf'
      timeout:
        description: 'Helm timeout in seconds'
        type: number
        default: 30
      terraform-path:
        description: 'Path to terraform directory'
        type: string
        default: 'terraform'

jobs:
  smurf:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    
    steps:
      - name: Check out repo
        uses: actions/checkout@v3
        
      - name: Configure AWS credentials with OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ inputs.aws-role }}
          aws-region: ${{ inputs.aws-region }}

      # Helm-specific steps
      - name: Set environment variables for Helm
        if: inputs.tools == 'helm'
        run: |
          echo "AWS_DEFAULT_REGION=${{ inputs.aws-region }}" >> $GITHUB_ENV
          echo "EKS_CLUSTER_NAME=${{ inputs.eks-cluster }}" >> $GITHUB_ENV
      
      - name: Smurf SDKR Provision
        if: inputs.tools == 'helm'
        uses: clouddrove/smurf@feat/docs_format
        with:
          tool: sdkr
          command: provision-ecr ${{ inputs.ecr-repository }}:${{ github.run_id }} -f ${{ inputs.dockerfile-path }}
          
      - name: Smurf SELM Upgrade
        if: inputs.tools == 'helm'
        uses: clouddrove/smurf@feat/docs_format
        with:
          tool: selm
          command: upgrade smurf --install --atomic --set image.tag=${{ github.run_id }} -f ${{ inputs.helm-values-path }} ${{ inputs.helm-chart-path }} -n ${{ inputs.namespace }} --timeout ${{ inputs.timeout }}

      # Terraform-specific steps
      - name: Smurf STF Init
        if: inputs.tools == 'terraform'
        uses: clouddrove/smurf@feat/docs_format
        with:
          path: ${{ inputs.terraform-path }}
          tool: stf
          command: init

      - name: Smurf STF Validate
        if: inputs.tools == 'terraform'
        uses: clouddrove/smurf@feat/docs_format
        with:
          path: ${{ inputs.terraform-path }}
          tool: stf
          command: validate
          
      - name: Smurf STF Validate
        if: inputs.tools == 'terraform'
        uses: clouddrove/smurf@feat/docs_format
        with:
          path: ${{ inputs.terraform-path }}
          tool: stf
          command: plan
          
      - name: Smurf STF Validate
        if: inputs.tools == 'terraform'
        uses: clouddrove/smurf@feat/docs_format
        with:
          path: ${{ inputs.terraform-path }}
          tool: stf
          command: apply          
