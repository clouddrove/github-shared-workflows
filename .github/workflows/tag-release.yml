---
name: Tag-Release

on:
  workflow_call:
    inputs:
      target_branch:
        required: true
        type: string
    secrets:
      GH_TOKEN:
        required: true

jobs:
  release:
    runs-on: ubuntu-latest
    if: ${{ github.event.pull_request.merged == true && github.event.pull_request.base.ref == inputs.target_branch }}

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Git
        run: |
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Install jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Get PR labels
        id: pr_labels
        run: |
          LABELS=$(jq -r '.pull_request.labels | map(.name) | join(",")' "$GITHUB_EVENT_PATH")
          echo "labels=$LABELS" >> $GITHUB_OUTPUT

      - name: Check for no-tag label
        id: skip_tag
        run: |
          if [[ "${{ steps.pr_labels.outputs.labels }}" == *"no-tag"* ]]; then
            echo "skip=true" >> $GITHUB_OUTPUT
          else
            echo "skip=false" >> $GITHUB_OUTPUT
          fi

      - name: Get latest tag (or v0.0.0 if none)
        id: get_latest_tag
        run: |
          git fetch --tags
          LATEST_TAG=$(git tag --list 'v*' --sort=-v:refname | head -n 1)
          if [ -z "$LATEST_TAG" ]; then
            LATEST_TAG="v0.0.0"
          fi
          echo "latest_tag=$LATEST_TAG" >> $GITHUB_OUTPUT

      - name: Calculate next version from latest tag and PR label
        id: calc_version
        if: steps.skip_tag.outputs.skip == 'false'
        run: |
          BASE_VERSION="${{ steps.get_latest_tag.outputs.latest_tag }}"
          BASE_VERSION="${BASE_VERSION#v}"
          IFS='.' read -r MAJOR MINOR PATCH <<< "$BASE_VERSION"
          LABELS="${{ steps.pr_labels.outputs.labels }}"
          if [[ "$LABELS" == *"major"* ]]; then
            MAJOR=$((MAJOR+1)); MINOR=0; PATCH=0
          elif [[ "$LABELS" == *"minor"* ]]; then
            MINOR=$((MINOR+1)); PATCH=0
          elif [[ "$LABELS" == *"patch"* ]]; then
            PATCH=$((PATCH+1))
          else
            PATCH=$((PATCH+1))
          fi
          NEW_VERSION="v$MAJOR.$MINOR.$PATCH"
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Create GitHub tag for the new version
        if: steps.skip_tag.outputs.skip == 'false'
        run: |
          git tag ${{ steps.calc_version.outputs.new_version }}
          git push https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/${{ github.repository }} ${{ steps.calc_version.outputs.new_version }}

      - name: Generate Changelog
        if: steps.skip_tag.outputs.skip == 'false'
        id: changelog
        uses: requarks/changelog-action@v1
        with:
          token: ${{ secrets.GH_TOKEN }}
          tag: ${{ steps.calc_version.outputs.new_version }}
          includeInvalidCommits: true
          writeToFile: true
          changelogFilePath: CHANGELOG.md
          includeRefIssues: true
          useGitmojis: true
          reverseOrder: false

      - name: Create Release
        if: steps.skip_tag.outputs.skip == 'false'
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GH_TOKEN }}
          tag: ${{ steps.calc_version.outputs.new_version }}
          name: ${{ steps.calc_version.outputs.new_version }}
          allowUpdates: true
          draft: false
          makeLatest: true
          body: |
            ${{ steps.changelog.outputs.changes }}
            [Compare changes](https://github.com/${{ github.repository }}/compare/${{ steps.get_latest_tag.outputs.latest_tag }}...${{ steps.calc_version.outputs.new_version }})

      - name: Commit CHANGELOG.md
        if: steps.skip_tag.outputs.skip == 'false'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          branch: ${{ inputs.target_branch }}
          commit_user_name: clouddrove-ci
          commit_user_email: 84795582+clouddrove-ci@users.noreply.github.com
          commit_author: "CloudDrove CI <84795582+clouddrove-ci@users.noreply.github.com>"
          commit_message: 'docs: update CHANGELOG.md for ${{ steps.calc_version.outputs.new_version }}'
          file_pattern: CHANGELOG.md

      - name: Action Summary
        run: |
          if [[ "${{ steps.skip_tag.outputs.skip }}" == "true" ]]; then
            echo "ðŸš« Release skipped due to 'no-tag' label."
          else
            echo "âœ… Released ${{ steps.calc_version.outputs.new_version }} successfully."
          fi
...
