name: Smurf Reusable Workflow
on:
  workflow_call:
    secrets:
      docker-username:
        description: 'Docker Hub username'
        required: false
      docker-password:
        description: 'Docker Hub token'
        required: false
      ecr-registry:
        description: 'ECR registry URL'
        required: false
    inputs:
      tools:
        description: 'Tool to run (selm, stf or sdkr)'
        type: string
        required: true
      command:
        description: 'Command to run with tool'
        type: string
        required: false
      branch:
        description: 'Branch to checkout'
        type: string
        default: 'master'
      aws-role:
        description: 'AWS IAM role ARN to assume'
        type: string
        required: true
      aws-region:
        description: 'AWS region'
        type: string
        default: 'us-east-1'
      provider:
        description: 'Cloud provider (aws, azure, gcp, digitalocean)'
        type: string
        required: false
        default: 'aws'
      
      # Common workspace inputs
      working-directory:
        description: 'Working directory for command execution'
        type: string
        required: false
        default: '.'
      
      # Helm-specific inputs
      eks-cluster:
        description: 'EKS cluster name'
        type: string
        required: false
      ecr-repository:
        description: 'ECR repository URL'
        type: string
        required: false
      dockerfile-path:
        description: 'Path to Dockerfile'
        type: string
        required: false
      helm-values-path:
        description: 'Path to Helm values file'
        type: string
        required: false
      helm-chart-path:
        description: 'Path to Helm chart'
        type: string
        required: false
      namespace:
        description: 'Kubernetes namespace'
        type: string
        required: false
        default: 'testing-smurf'
      timeout:
        description: 'Timeout in seconds'
        type: number
        default: 30
      
      # Docker-specific inputs
      image-name:
        description: 'Docker image name'
        type: string
        required: false
      image-tag:
        description: 'Docker image tag'
        type: string
        required: false
      registry-type:
        description: 'Container registry type (docker or ecr)'
        type: string
        required: false
        default: 'docker'
      build-path:
        description: 'Path to build context'
        type: string
        required: false
        default: '.'
      
      # Terraform-specific inputs
      var-file:
        description: 'Terraform var file path'
        type: string
        required: false
      destroy:
        description: 'Set to true to destroy infrastructure'
        type: boolean
        required: false
        default: false
      approvers:
        description: 'Comma-separated list of approvers'
        type: string
        required: false
      terraform-version:
        description: 'Terraform version to use'
        type: string
        required: false
        default: '1.3.6'
      minimum-approvals:
        description: 'Minimum approvals required'
        type: string
        required: false
        default: '1'

jobs:
  smurf-helm:
    if: inputs.tools == 'selm'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Check out repo
        uses: actions/checkout@v4.1.7
        with:
          ref: ${{ inputs.branch }}
        
      - name: Configure AWS credentials with OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ inputs.aws-role }}
          aws-region: ${{ inputs.aws-region }}
          
      - name: Set environment variables
        run: |
          echo "AWS_DEFAULT_REGION=${{ inputs.aws-region }}" >> $GITHUB_ENV
          echo "EKS_CLUSTER_NAME=${{ inputs.eks-cluster }}" >> $GITHUB_ENV
      
      - name: Smurf SELM Run
        uses: clouddrove/smurf@feat/docs_format
        with:
          tool: selm
          command: ${{ inputs.command }}
          path: ${{ inputs.working-directory }}
          
  smurf-docker:
    if: inputs.tools == 'sdkr'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    env:
      AWS_REGION: ${{ inputs.aws-region }}
      IMAGE_NAME: ${{ inputs.image-name }}
      IMAGE_TAG: ${{ inputs.image-tag }}
      REGISTRY_TYPE: ${{ inputs.registry-type }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.7
        with:
          ref: ${{ inputs.branch }}
        
      - name: Configure AWS credentials with OIDC
        if: inputs.registry-type == 'ecr'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ inputs.aws-role }}
          role-session-name: aws-auth
          aws-region: ${{ inputs.aws-region }}

      - name: Set environment variables
        run: |
          echo "AWS_DEFAULT_REGION=${{ inputs.aws-region }}" >> $GITHUB_ENV
          echo "EKS_CLUSTER_NAME=${{ inputs.eks-cluster }}" >> $GITHUB_ENV      

      - name: Login to Amazon ECR
        if: inputs.registry-type == 'ecr'
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Login to Docker Hub
        if: inputs.registry-type == 'docker'
        run: echo "${{ secrets.docker-password }}" | docker login -u "${{ secrets.docker-username }}" --password-stdin

      - name: Build Docker Image
        uses: clouddrove/smurf@feat/docs_format
        with:
          tool: sdkr
          command: build ${{ (inputs.registry-type == 'ecr' && secrets.ecr-registry || secrets.docker-username) }}/${{ inputs.image-name }}:${{ inputs.image-tag }}
          path: ${{ inputs.build-path }}

      - name: Push Image to Docker Hub
        if: inputs.registry-type == 'docker'
        uses: clouddrove/smurf@feat/docs_format
        with:
          tool: sdkr
          command: push hub ${{ secrets.docker-username }}/${{ inputs.image-name }}:${{ inputs.image-tag }}
          path: ${{ inputs.working-directory }}

      - name: Push Image to Amazon ECR
        if: inputs.registry-type == 'ecr'
        uses: clouddrove/smurf@feat/docs_format
        with:
          tool: sdkr
          command: push ecr ${{ secrets.ecr-registry }}/${{ inputs.image-name }}:${{ inputs.image-tag }}
          path: ${{ inputs.working-directory }}

  smurf-terraform:
    if: inputs.tools == 'stf'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.7
        with:
          ref: ${{ inputs.branch }}

      - name: Configure AWS credentials with OIDC
        if: inputs.provider == 'aws'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ inputs.aws-role }}
          aws-region: ${{ inputs.aws-region }}
          
      - name: Set AWS environment variables
        if: inputs.provider == 'aws'
        run: |
          echo "AWS_REGION=${{ inputs.aws-region }}" >> $GITHUB_ENV

      - name: Smurf STF Execute
        uses: clouddrove/smurf@feat/docs_format
        with:
          tool: stf
          command: ${{ inputs.command }} ${{ inputs.var-file && format('-var-file={0}', inputs.var-file) || '' }} ${{ inputs.destroy && '-destroy' || '' }}
          path: ${{ inputs.working-directory }}
        env:
          TF_VAR_region: ${{ inputs.provider == 'aws' && inputs.aws-region || '' }}
