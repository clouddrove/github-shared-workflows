name: Smurf
on:
  workflow_call:
    secrets:
      AWS_ACCESS_KEY_ID:
        required: false
        description: 'AWS Access Key ID for direct authentication'
      AWS_SECRET_ACCESS_KEY:
        required: false
        description: 'AWS Secret Access Key for direct authentication'
      AWS_SESSION_TOKEN:
        required: false
        description: 'AWS Session Token for direct authentication'
        
    inputs:
      command:
        description: 'Command to run with tool'
        type: string
        required: false
      docker_enable:
        description: 'Set to true to run docker commands'
        type: string
        required: false
        default: 'true'
      aws-role:
        description: 'AWS IAM role ARN to assume'
        type: string
        required: false
      aws-region:
        description: 'AWS region'
        type: string
        default: 'us-east-1'
      provider:
        description: 'Cloud provider (aws, azure, gcp, digitalocean)'
        type: string
        required: false
        default: 'aws'
      aws_auth_method:
        description: 'AWS Auth method to use'
        type: string
        required: false
      eks-cluster:
        description: 'EKS cluster name'
        type: string
        required: false
      branch:
        description: 'Branch to checkout'
        type: string
        default: 'master'
      aws_auth:
        description: 'Set to true for AWS Auth'
        type: string
        default: 'false'

      ## Terraform Inputs
      terraform_directory:
        description: 'Terraform Directory'
        type: string
        required: false
      terraform_format_command:
        description: 'Terraform Format Command'
        type: string
        required: false
      terraform_init_command:
        description: 'Terraform Init Command'
        type: string
        required: false
      terraform_validate_command:
        description: 'Terraform Validate Command'
        type: string
        required: false
      terraform_plan_command:
        description: 'Terraform Plan Command'
        type: string
        required: false
      terraform_apply_command:
        description: 'Terraform Apply Command'
        type: string
        required: false

jobs:
  terraform:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Check out code
        uses: actions/checkout@v4.1.7
        with:
          ref: ${{ inputs.branch }}
        
      - name: Configure AWS credentials with OIDC
        if: inputs.aws_auth_method == 'oidc'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ inputs.aws-role }}
          aws-region: ${{ inputs.aws-region }}
         
      - name: Configure AWS credentials with access keys
        if: inputs.aws_auth_method == 'keys'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
          AWS_REGION: ${{ inputs.aws-region }}
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          if [[ -n "$AWS_SESSION_TOKEN" ]]; then
            aws configure set aws_session_token $AWS_SESSION_TOKEN
          fi
          aws configure set region $AWS_REGION
          
      - name: Set environment variables
        run: |
          echo "AWS_DEFAULT_REGION=${{ inputs.aws-region }}" >> $GITHUB_ENV
          echo "EKS_CLUSTER_NAME=${{ inputs.eks-cluster }}" >> $GITHUB_ENV
          echo "AWS_AUTH=${{ inputs.aws_auth }}" >> $GITHUB_ENV
      
      - name: Change directory and run commands
        run: |
          cd ${{ inputs.terraform_directory }}
          ls -la

      - name: Terraform Format
        uses: clouddrove/smurf@v1.0.0
        with:
          tool: stf
          command: ${{ inputs.terraform_format_command }}
      
      - name: Terraform Init
        uses: clouddrove/smurf@v1.0.0
        with:
          tool: stf
          command: ${{ inputs.terraform_init_command }}

      - name: Terraform Validate
        uses: clouddrove/smurf@v1.0.0
        with:
          tool: stf
          command: ${{ inputs.terraform_validate_command }}

      # - name: Terraform Plan
      #   uses: clouddrove/smurf@v1.0.0
      #   with:
      #     tool: stf
      #     command: ${{ inputs.terraform_plan_command }}

      # - name: Terraform Apply
      #   uses: clouddrove/smurf@v1.0.0
      #   with:
      #     tool: stf
      #     command: ${{ inputs.terraform_apply_command }}

      