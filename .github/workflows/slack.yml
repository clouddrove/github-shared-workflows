---
name: 'Slack Notification'

on:
  workflow_call:
    inputs:
      channel:
        required: true
        type: string
      title:
        required: true
        type: string
      status:
        required: true
        type: string
      fields_json:
        required: false
        type: string
        default: '[]'
      body_md:
        required: false
        type: string
        default: ''
      button_text:
        required: false
        type: string
        default: 'View GitHub Run'
      button_url:
        required: false
        type: string
        default: ''
      logo_url:
        required: false
        type: string
        default: 'https://clouddrove.com/logo.png'
      brand:
        required: false
        type: string
        default: 'CloudDrove'

    secrets:
      SLACK_BOT_TOKEN:
        required: true

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Build Slack payload (Attachment format)
        id: build
        shell: bash
        env:
          CHANNEL: ${{ inputs.channel }}
          TITLE: ${{ inputs.title }}
          STATUS: ${{ inputs.status }}
          FIELDS_JSON: ${{ inputs.fields_json }}
          BODY_MD: ${{ inputs.body_md }}
          BUTTON_TEXT: ${{ inputs.button_text }}
          BUTTON_URL: ${{ inputs.button_url }}
          LOGO_URL: ${{ inputs.logo_url }}
          BRAND: ${{ inputs.brand }}
          RUN_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          ACTOR: ${{ github.actor }}
          REF: ${{ github.ref }}
          SHA: ${{ github.sha }}
        run: |
          set -e

          # Map status to emoji and color
          case "${STATUS,,}" in
            success) EMOJI="✅"; COLOR="good";;
            failed) EMOJI="❌"; COLOR="danger";;
            cancelled) EMOJI="⚠️"; COLOR="warning";;
            warning) EMOJI="⚠️"; COLOR="warning";;
            info|*) EMOJI="ℹ️"; COLOR="#439FE0";;
          esac

          # Default fields
          DEFAULT_FIELDS=$(jq -n --arg ref "$REF" --arg sha "$SHA" --arg actor "@$ACTOR" \
            '[ {"title":"Ref","value":$ref,"short":true},
               {"title":"Commit","value":$sha,"short":true},
               {"title":"Actor","value":$actor,"short":true}
             ]')

          # Merge custom + default fields
          ALL_FIELDS=$(jq -c -n --argjson a "$FIELDS_JSON" --argjson b "$DEFAULT_FIELDS" '$a + $b')

          # Format Slack attachment
          jq -n \
            --arg ch "$CHANNEL" \
            --arg title "$EMOJI $TITLE — ${STATUS^^}" \
            --arg color "$COLOR" \
            --arg brand "$BRAND" \
            --arg logo "$LOGO_URL" \
            --arg run_url "$RUN_URL" \
            --arg body "$BODY_MD" \
            --argjson fields "$ALL_FIELDS" \
            '{
              channel: $ch,
              attachments: [
                {
                  color: $color,
                  author_name: $brand,
                  author_icon: $logo,
                  footer: ("by " + $brand),
                  footer_icon: $logo,
                  title: $title,
                  title_link: $run_url,
                  fields: $fields,
                  text: ($body != "" ? $body : null)
                }
              ]
            }' > payload.json

          echo "payload=$(jq -c . payload.json)" >> $GITHUB_OUTPUT

      - name: Send Slack notification
        uses: slackapi/slack-github-action@v1
        with:
          payload: ${{ steps.build.outputs.payload }}
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

...
