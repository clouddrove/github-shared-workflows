name: docker-build-push

on:
  workflow_call:
    inputs:
      registry:
        required: true
        type: string
      images:
        required: true
        type: string
      aws-region:
        required: true
        type: string
      ECR_REPOSITORY:
        required: true
        type: string
      IMAGE_TAG:
        required: true
        type: string
      
    secrets:
      AWS_ACCESS_KEY_ID:
        description: 'aws access keys'
        required: true
      AWS_SECRET_ACCESS_KEY:
        description: 'aws secret access keys'
        required: true
      DOCKERHUB_USERNAME:
        description: 'dockerhub username'
        required: true
      DOCKERHUB_PASSWORD:
        description: 'dockerhub password'
        required: true

jobs:
  build-image:
    name: Build Images
    runs-on: ubuntu-latest

    steps:

      - name: Checkout git repo
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Push docker image to DOCKERHUB
        if: ${{ inputs.registry == 'DOCKERHUB' }}
        env:
          IMAGE_TAG: ${{ inputs.IMAGE_TAG }}
          images: ${{ inputs.images }}  
        run: |
          docker build -t $images:$IMAGE_TAG .
          docker push $images:$IMAGE_TAG

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ inputs.aws-region }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Push docker image to Amazon ECR
        if: ${{ inputs.registry == 'ECR' }}
        id: docker-build
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ inputs.ECR_REPOSITORY }}
#           IMAGE_TAG: ${{ github.run_number }}
          IMAGE_TAG: ${{ inputs.IMAGE_TAG }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Push docker image to Amazon ECR and DOCKERHUB
        if: ${{ inputs.registry == 'DOCKERHUB,ECR' }}
        env:
          ## For ECR env variable
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ inputs.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ inputs.IMAGE_TAG }}
          ## For DOCKERHUB env variable
          images: ${{ inputs.images }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          
          docker build -t $images:$IMAGE_TAG .
          docker push $images:$IMAGE_TAG
          
